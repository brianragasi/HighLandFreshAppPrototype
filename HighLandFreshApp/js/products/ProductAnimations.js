class ProductAnimations {    constructor(renderer) {        this.renderer = renderer;    }    animateRowAdd(productId) {        const targetRow = this.renderer.findRowByProductId(productId);        if (targetRow) {            targetRow.classList.add('row-adding');            setTimeout(() => {                targetRow.classList.remove('row-adding');            }, 400);        }    }    animateRowUpdate(productId) {        const targetRow = this.renderer.findRowByProductId(productId);        if (targetRow) {            targetRow.classList.add('row-updating');            setTimeout(() => {                targetRow.classList.remove('row-updating');            }, 400);        }    }    animateRowDelete(productId, callback) {        const targetRow = this.renderer.findRowByProductId(productId);        if (targetRow) {            const rowHeight = targetRow.offsetHeight;            targetRow.style.height = rowHeight + 'px';            targetRow.style.overflow = 'hidden';            targetRow.style.transition = 'opacity 0.3s ease-out, height 0.4s ease-out, padding 0.4s ease-out';            targetRow.offsetHeight;            targetRow.style.opacity = '0';            targetRow.style.height = '0';            targetRow.style.paddingTop = '0';            targetRow.style.paddingBottom = '0';            setTimeout(() => {                targetRow.remove();                callback();            }, 450);         } else {            callback();        }    }}window.ProductAnimations = ProductAnimations;