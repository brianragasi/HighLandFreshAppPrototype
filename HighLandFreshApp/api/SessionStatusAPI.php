<?phprequire_once __DIR__ . '/BaseAPI.php';require_once __DIR__ . '/SessionConfig.php';class SessionStatusAPI extends BaseAPI{    public function route(): void    {        $this->initializeSession();        $method = $this->getMethod();        $operation = $this->getOperation() ?: 'getSessionStatus';        $this->handle(function () use ($method, $operation) {            switch ($operation) {                case 'getSessionStatus':                    $this->getSessionStatus();                    break;                default:                    $this->respondError('Unsupported operation', 400, ['operation' => $operation]);                    break;            }        });    }    public function getSessionStatus(): void    {        try {            if (isAuthenticated()) {                $response = [                    'success' => true,                    'authenticated' => true,                    'user' => [                        'id' => $_SESSION['user_id'],                        'username' => $_SESSION['username'],                        'role' => $_SESSION['role']                    ],                    'session_info' => [                        'login_time' => $_SESSION['login_time'] ?? null,                        'timeout' => $_SESSION['timeout'] ?? null,                        'remaining_time' => ($_SESSION['timeout'] ?? 0) - time()                    ]                ];            } else {                $response = [                    'success' => true,                    'authenticated' => false,                    'user' => null,                    'session_info' => null                ];            }            $this->respond($response);        } catch (Exception $e) {            $this->respondError('Session check failed: ' . $e->getMessage(), 500);        }    }}if (!defined('TESTING') && basename($_SERVER['SCRIPT_NAME']) === 'SessionStatusAPI.php') {    $api = new SessionStatusAPI(['methods' => 'GET, OPTIONS']);    $api->route();}?>